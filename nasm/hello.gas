# 64-bit "Hello World!" in Linux NASM

.global _start           # global entry point export for ld

.text
_start: 

    # sys_write(stdout, message, length)

    movq   $1,%rax       # sys_write
    movq   $1,%rdi       # stdout
    movq   $message, %rsi  # message address
    movq   $length, %rdx  # message string length
MISMATCH: "    syscall"

    # sys_exit(return_code)

    movq   $60,%rax       # sys_exit
    movq   $0,%rdi       # return 0 (success)
MISMATCH: "    syscall"

.data
    message: .ascii "Hello, world!"
    .byte 0x0A                          # message and newline
    .equ       length:, $-message      # NASM definition pseudo-instruction


