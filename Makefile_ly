# Rules:
.PHONY: all checkdirs clean release debug

Platform=CAC
Compiler=PGI#Intel#GNU#
CUDA=F#T#
MPI=F#T#

TargetDir = obj
LibDir = lib
WorkDir = $(PWD)
InfoDir = Info


# Set Compiler
ifeq ($(Compiler),Intel)
ifeq ($(MPI),T)
F90 = mpif90
CC = mpicc
CPPC = mpiCC
else
F90 = ifort
CC = icc
CPPC = icpc
endif
LinkFlag = -cxxlib
endif

ifeq ($(Compiler),PGI)
ifeq ($(MPI),T)
F90 = mpif90
CC = mpicc
CPPC = mpiCC
else
F90 = pgf90
CC = gcc
# CC = pgcc
endif
LinkFlag = -g77libs -pgf90libs -pgf77libs -lstdc++
endif

ifeq ($(Compiler),GNU)
ifeq ($(MPI),T)
F90 = mpif90
CC = mpicc
else
F90 = gfortran
CC = gcc
endif
endif


# Set compiler flags and library path for specified platform
ifeq ($(Platform),CAC)
ifeq ($(Compiler),PGI)
ifeq ($(CUDA),T)
CUDAFLAGDEBUG = -Mcuda=emu -Dcuda
CUDAFLAGRELEASE = -Mcuda -Dcuda
LIB_CUFFT = -L/home/software/rhel5/cuda/2.2/cuda/lib64 -lcufft 
endif
debug: F90FLAGS = -O0 -g -pg -Mbounds -mp $(CUDAFLAGDEBUG) -D$(Compiler)
release: F90FLAGS = -fastsse -O3 -Msmartalloc -Mcache_align -mp $(CUDAFLAGRELEASE) -D$(Compiler)
debug: CFLAGS=-O0 -g -m64 $(C_INC) -D$(Compiler)
release: CFLAGS=-O3 -m64 $(C_INC) -D$(Compiler)
MODFLAGS = -module $(TargetDir)
# OPTOPTION = -L$(OPT_LINK) -lopt-openmpi -lstdc++ -ldl
# LIB_FFT= -L/home/software/rhel5/fftw/3.2.1-pgi/lib/ -lfftw3 -lm
LIB_FFT = -L/home/software/rhel5/fftw/2.1.5-pgi/lib/ \
	 -ldrfftw_mpi -ldfftw_mpi -ldrfftw -ldfftw -ldfftw_threads
LIB_MPI = -L/home/software/rhel6/openmpi-1.6.0/pgi-12.3/lib/ -lmpi_f90
endif

ifeq ($(Compiler),Intel)
debug: F90FLAGS = -O0 -g -traceback -check bounds -align records -parallel -openmp -D$(Compiler)
release: F90FLAGS = -vec_report0 -O3 -no-prec-div -xHost -align records -parallel -openmp -D$(Compiler)
debug: CFLAGS=-O0 -g -openmp $(C_INC) -D$(Compiler)
release: CFLAGS=-O3 -prec-div -no-ftz -restrict -openmp -fno-inline-functions $(C_INC) -D$(Compiler)
MODFLAGS = -module $(TargetDir)
LIB_FFT = -L/home/software/rhel5/fftw/2.1.5-intel/lib/ \
	-ldrfftw_mpi -ldfftw_mpi -ldrfftw -ldfftw -ldfftw_threads	
LIB_MPI = -L/home/software/rhel6/openmpi-1.6.0/intel-11.1/lib/ -lmpi_f90	
endif

ifeq ($(Compiler),GNU)
debug: F90FLAGS = -O0 -g -pg -fimplicit-none -fbounds-check -ffree-line-length-none  -ffixed-line-length-none
release: F90FLAGS = -O3 -ftracer -funswitch-loops -ftree-vectorize -fimplicit-none -fno-range-check -ffree-line-length-none -ffixed-line-length-none 
debug: CFLAGS=-O0 -g -m64 $(C_INC) -D$(Compiler)
release: CFLAGS=-O3 -m64 $(C_INC) -D$(Compiler)
MODFLAGS = -J$(TargetDir) -I$(TargetDir)
OPTOPTION = -L$(OPT_LINK) -lopt-openmpi -lstdc++ -ldl
LIB_FFT = -L/home/software/rhel5/fftw/2.1.5-gcc/lib/ \
	-ldrfftw_mpi -ldfftw_mpi -ldrfftw -ldfftw -ldfftw_threads	
endif	
endif


F77FLAGS = $(F90FLAGS)
F77 = $(F90)


SOURCES = BG_mem_moniter.c cufft_mod.F90 SpecFunc.F90 global.F90 MISC.F90 Interp.F90 legendreroutines.F90 sphericalmodule.F90 RayOp.F90 cudakernel.F90 SphOp.F90 GeoPart.F90 PWTD_Init.F90 PWTD_Execute.F90 SourceTest_Init.F90 PWTD_MOT_Interface.F90 4D_TDVIE.cpp

	
F90_Files 		= $(filter %.F90, $(SOURCES))
F_Files 		= $(filter %.f, $(SOURCES))
C_Files			= $(filter %.c, $(SOURCES))
CPP_Files			= $(filter %.cpp, $(SOURCES))
CUF_Files 		= $(filter %.cuf, $(SOURCES))
OBJECTS_F = $(F90_Files:%.F90= $(TargetDir)/%.o)\
	$(F_Files:%.f= $(TargetDir)/%.o)\
	$(CUF_Files:%.cuf= $(TargetDir)/%.o)
OBJECTS_C = $(C_Files:%.c= $(TargetDir)/%.o)
OBJECTS_CPP = $(CPP_Files:%.cpp= $(TargetDir)/%.o)
EXECUTABLE=exe
 

debug: checkdirs $(OBJECTS_F) $(OBJECTS_C) $(OBJECTS_CPP)
	@echo Linking $@ version...
	$(CC) $(CFLAGS) $(OBJECTS_F) $(OBJECTS_C) $(OBJECTS_CPP) $(LIB_FFT) $(LIB_CUFFT) $(LIB_MPI) $(OPTOPTION) -o $(EXECUTABLE) $(LinkFlag)

release: checkdirs $(OBJECTS_F) $(OBJECTS_C) $(OBJECTS_CPP)
	@echo Linking $@ version...
	$(CC) $(CFLAGS) $(OBJECTS_F) $(OBJECTS_C) $(OBJECTS_CPP) $(LIB_FFT) $(LIB_CUFFT) $(LIB_MPI) -o $(EXECUTABLE) $(LinkFlag)
	
$(TargetDir)/%.o: %.F90
	$(F90) $(F90FLAGS) $(MODFLAGS) -c $< -o $@
$(TargetDir)/%.o: %.f
	$(F77) $(F77FLAGS) -c $< -o $@
$(TargetDir)/%.o: %.cuf
	$(F90) $(F90FLAGS) $(MODFLAGS) -c $< -o $@
$(TargetDir)/%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@
$(TargetDir)/%.o: %.cpp
	$(CPPC) $(CFLAGS) -c $< -o $@
	
clean:
	@echo Removing object files in $(TargetDir)/...
	rm -rf $(TargetDir)
	rm -rf $(InfoDir)
	rm -rf $(LibDir)
	rm -f $(EXECUTABLE)
	rm -f core.*
	rm -f gmon.out*
	rm -f *.out 
	rm -f fpoint*
	
checkdirs: $(TargetDir) $(InfoDir) $(LibDir)

$(TargetDir):
	@echo Creating folder $(TargetDir)/...
	@mkdir -p $@
$(InfoDir):
	@echo Creating folder $(InfoDir)/...
	@mkdir -p $@
$(LibDir):
	@echo Creating folder $(LibDir)/...
	@mkdir -p $@	
